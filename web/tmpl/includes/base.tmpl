<!DOCTYPE html>
<html>
    <head>
        <title>{{ .AppName }}{{ template "title" . }}</title>
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <link rel="shortcut icon" href="/static/img/favicon.png" />
        <link rel="stylesheet"
            href="https://cdn.jsdelivr.net/npm/purecss@3.0.0/build/pure-min.css"
            integrity="sha384-X38yfunGUhNzHpBaEBsWLO+A0HDYOQi8ufWDkZ0k9e0eXz/tH3II7uKZ9msv++Ls" crossorigin="anonymous">
        <link rel="stylesheet" href="/static/css/app.css" />
    </head>
    <body>
        <script src="https://unpkg.com/htmx.org@1.9.2"></script>
        <div id="container">
            <div id="head">
                <div class="left-side">
                    <div id="logo"><a href="/">{{.AppName}}</a> <span class="app-version">(v{{.VersionString}})</span></div>
                    {{ template "headerLeft" . }}
                </div>
                <div class="right-side">
                    <a href="https://github.com/chompy/ffprog">
                        <img alt="Github" src="/static/img/github.png" />
                    </a>
                    {{ template "headerRight" . }}
                </div>
                <div class="clear"></div>
            </div>
            <div id="body">
                {{ template "content" . }}
            </div>
        </div>

        {{ template "scripts" . }}
        <script type="text/javascript">
            // fix htmlx not handling 4xx errors
            document.body.addEventListener('htmx:beforeOnLoad', function (evt) {
                if (evt.detail.xhr.status >= 400 && evt.detail.xhr.status <= 499) {
                    evt.detail.shouldSwap = true;
                }
            });
            // populate time
            let timeTags = document.getElementsByClassName("time");
            for (let i = 0; i < timeTags.length; i++) {
                let timestamp = timeTags[i].getAttribute("data-timestamp");
                if (!timestamp) { continue; }
                let d = new Date(timestamp * 1000);
                timeTags[i].innerHTML = d.toLocaleDateString() + ' ' + d.toLocaleTimeString();
            }
        </script>
    </body>
</html>

{{ define "scripts" }}{{ end }}
{{ define "title" }}{{ end }}